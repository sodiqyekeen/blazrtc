@page "/counter"
@inject IMediaDeviceService MediaDeviceService
@implements IDisposable
<PageTitle>Counter</PageTitle>

<h1>Camera</h1>

<div class="card" style="width: 18rem;">
    <video id="localVideo" class="@filter" autoplay playsinline></video>
    <div class="card-body">
        <h5 class="card-title">Live Video Stream</h5>
        @if (cameraStarted)
        {
            <button class="btn btn-primary" @onclick="StopCamera">Stop Stream</button>
            <InputSelect @bind-Value="filter" TValue="string" DisplayName="Filter">
                <option value="filter-none">None</option>
                <option value="filter-blur">Blur</option>
                <option value="filter-grayscale">Grayscale</option>
                <option value="filter-invert">Invert</option>
                <option value="filter-sepia">Sepia</option>
            </InputSelect>
        }
        else
        {
            <button class="btn btn-primary" @onclick="StartCamera">Start Stream</button>
        }
    </div>
</div>

@code {
    private int currentCount = 0;
    private bool cameraStarted = false;
    MediaOptions mediaOptions = new();
    private string filter = "filter-none";
    private async void StartCamera()
    {
        mediaOptions.PreviewStreamIn = "localVideo";
        MediaDeviceService.OnVideoStreamAvailable += StateHasChanged;
        cameraStarted= await MediaDeviceService.StartCameraAsync(mediaOptions);
        StateHasChanged();
    }

    private void ApplyFilter(string newFilter)
    {

    }

    private async void StopCamera()
    {
        await MediaDeviceService.StopCameraAsync();
        cameraStarted = false;
        StateHasChanged();
    }

    public void Dispose()
    {
        MediaDeviceService.OnVideoStreamAvailable -= StateHasChanged;
    }
}
