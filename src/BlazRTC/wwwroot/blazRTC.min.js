class BlazMediaDevice{constructor(){this.mediaStream=null;this.localStreamId=null}async ensureMediaPermissions(){const n=await navigator.permissions.query({name:"camera"}),t=await navigator.permissions.query({name:"microphone"});(n.state!=="granted"||t.state!=="granted")&&await navigator.mediaDevices.getUserMedia({audio:!0,video:!0})}async getConnectedDevices(){await this.ensureMediaPermissions();const n=await navigator.mediaDevices.enumerateDevices();return n.filter(n=>n.kind!=="other").map(n=>({deviceId:n.deviceId||"",kind:n.kind||"",label:n.label||"",groupId:n.groupId||""}))}async handleDeviceChange(n){const t=await this.getConnectedDevices();n.invokeMethodAsync("RaiseOnDeviceChange",t)}listenForDeviceChanges(n){navigator.mediaDevices.addEventListener("devicechange",()=>{this.handleDeviceChange(n)})}cancelDeviceChangeListener(){navigator.mediaDevices.removeEventListener("devicechange")}async getMediaStream(n,t,i){navigator.mediaDevices.getUserMedia(n).then(n=>{if(!n){console.error("No stream found");return}this.mediaStream=n;t&&(this.localStreamId=t,this.showMediaStream(n,t,!0));i.invokeMethodAsync("RaiseOnMediaStreamAvailable",n.id)}).catch(n=>{console.error("Error occurred while accessing media devices",n)})}showMediaStream(n,t,i){if(n&&t){const r=document.getElementById(t);r&&(r.srcObject=n,r.muted=i)}}stopMediaStream(n){if(n){const t=document.getElementById(n);if(t.srcObject){const n=t.srcObject,i=n.getTracks();i.forEach(n=>n.stop());t.srcObject=null;t.removeAttribute("src")}}}toggleVideoTrack(){this.mediaStream&&this.mediaStream.getVideoTracks().forEach(n=>{n.enabled=!n.enabled})}toggleAudioTrack(){this.mediaStream&&this.mediaStream.getAudioTracks().forEach(n=>{n.enabled=!n.enabled})}dispose(){this.mediaStream&&(this.mediaStream.getTracks().forEach(n=>n.stop()),this.mediaStream=null);this.localStreamId=null}}window.blazMediaDevice=new BlazMediaDevice;