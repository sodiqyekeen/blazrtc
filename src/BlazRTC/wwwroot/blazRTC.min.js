class BlazMediaDevice{async getConnectedDevices(){await navigator.mediaDevices.getUserMedia({audio:!0,video:!0});const n=await navigator.mediaDevices.enumerateDevices();return n.filter(n=>n.kind!=="other").map(n=>(console.log("device",n),{deviceId:n.deviceId||"",kind:n.kind||"",label:n.label||"",groupId:n.groupId||""}))}async handleDeviceChange(n){const t=await this.getConnectedDevices();n.invokeMethodAsync("RaiseOnDeviceChange",t)}listenForDeviceChanges(n){navigator.mediaDevices.addEventListener("devicechange",()=>{this.handleDeviceChange(n)})}cancelDeviceChangeListener(){navigator.mediaDevices.removeEventListener("devicechange")}async getMediaStream(n){console.info("options",n);const i={video:{frameRate:n.frameRate,width:{min:480,ideal:720,max:1280},aspectRatio:n.aspectRatio},audio:!0},t=await navigator.mediaDevices.getUserMedia(i);if(t&&n.previewStreamIn){const i=document.getElementById(n.previewStreamIn);i.srcObject=t;i.muted=n.muted}}stopMediaStream(n){if(n){const t=document.getElementById(n);if(console.info("videoElement",t),t.srcObject){const n=t.srcObject,i=n.getTracks();i.forEach(n=>n.stop())}}}}window.blazMediaDevice=new BlazMediaDevice;